import org.jetbrains.kotlin.config.KotlinCompilerVersion

plugins {
    id 'org.jetbrains.kotlin.multiplatform'
}

println("Using Kotlin compiler version: $KotlinCompilerVersion.VERSION")

kotlin {
    sourceSets{
        all {
            languageSettings {
                languageVersion = '1.3'
                apiVersion = '1.3'
                enableLanguageFeature('InlineClasses')
//                useExperimentalAnnotation('kotlin.ExperimentalUnsignedTypes')
            }
        }

        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
            }
        }

        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
    }
    jvm('jdk9') { // for jdk 9
        compilations.main {

            sourceCompatibility = JavaVersion.VERSION_1_9
            targetCompatibility = JavaVersion.VERSION_1_9

            kotlinOptions {
                jvmTarget = "1.8"
            }

            dependencies {
                implementation kotlin('stdlib-jdk8')
            }
        }

        compilations.test {
            kotlinOptions {
                jvmTarget = "1.8"
            }

            dependencies {
                implementation kotlin('test-junit5')
                implementation "org.junit.jupiter:junit-jupiter-api:$junit_version"

                runtimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_version"
            }
        }
    }
//    jvm('jdk') { // for jdk 6/7
//        compilations.main {
//            dependencies {
//                implementation kotlin('stdlib')
//            }
//        }
//
//        compilations.test {
//            dependencies {
//                implementation kotlin('test-junit')
//            }
//        }
//    }
//    js()
}

// Force strict explicit API for better source code readability
kotlin.sourceSets.matching({ it.name.contains("Main") }).all { srcSet ->
    project.ext.set("kotlin.mpp.freeCompilerArgsForSourceSet.${srcSet.name}", "-Xexplicit-api=strict")
}

jdk9Test {
    useJUnitPlatform()
    testLogging {
        events 'passed', 'failed', 'skipped'
        showStandardStreams = true
    }
}