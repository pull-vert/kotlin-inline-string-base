import org.jetbrains.kotlin.config.KotlinCompilerVersion

plugins {
    id 'org.jetbrains.kotlin.multiplatform'
    id 'org.jetbrains.dokka'
    id 'maven-publish'
}

println("Using Kotlin compiler version: $KotlinCompilerVersion.VERSION")

kotlin {
    sourceSets{
        all {
            languageSettings {
                progressiveMode = true

                languageVersion = '1.3'
                apiVersion = '1.3'
                enableLanguageFeature('InlineClasses')
                useExperimentalAnnotation('kotlin.ExperimentalUnsignedTypes')
                useExperimentalAnnotation('kotlin.ExperimentalStdlibApi')
            }
        }

        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
            }
        }

        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }

        jsMain {
            dependencies {
                implementation kotlin('stdlib-js')
            }
        }

        jsTest {
            dependencies {
                implementation kotlin('test-js')
            }
        }
    }
    jvm() { // for jdk 8
        withJava()
        compilations.main {

            sourceCompatibility = JavaVersion.VERSION_1_8
            targetCompatibility = JavaVersion.VERSION_1_8

            kotlinOptions {
                jvmTarget = "1.8"
            }

            dependencies {
                implementation kotlin('stdlib')
            }
        }

        compilations.test {
            kotlinOptions {
                jvmTarget = "1.8"
            }

            dependencies {
                implementation kotlin('test-junit5')
                implementation "org.junit.jupiter:junit-jupiter-api:$junit_version"

                runtimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_version"
            }
        }
    }
    js {
        nodejs {
            testTask {
                debug = false
            }
        }
    }
    //mingwX64()
    androidNativeArm64()
    linuxArm64()
    //linuxX64()
}

// Force strict explicit API for better source code readability
kotlin.sourceSets.matching({ it.name.contains("Main") }).all { srcSet ->
    project.ext.set("kotlin.mpp.freeCompilerArgsForSourceSet.${srcSet.name}", "-Xexplicit-api=strict")
}

jvmTest {
    useJUnitPlatform()
    testLogging {
        events 'passed', 'failed', 'skipped'
        showStandardStreams = true
    }
}

dokka {
    outputFormat = 'gfm'
    outputDirectory = "$buildDir/dokka"
}

publishing {
    repositories {
        maven {
            def user = 'pull-vert'
            def repo = 'kotlin-utf8-string'
            def name = 'kotlin-utf8-string'
            url = "https://api.bintray.com/maven/$user/$repo/$name/;publish=0"

            credentials {
                username = bintray_user //this usually comes from gradle.properties file in ~/.gradle
                password = bintray_api_key //this usually comes from gradle.properties file in ~/.gradle
            }
        }
    }
}
